                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 803800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      | 	.align 8 	
0x018:                      | data:	
0x018: 04000d0000000000     |   .quad 0x0000000d0004
0x020: 03000d0000000000     |   .quad 0x0000000d0003
0x028: 02000d0000000000     |   .quad 0x0000000d0002
0x030:                      | data_end:
0x030: 01000d0000000000     |   .quad 0x0000000d0001
                            | 
                            | 
0x038:                      | main:
0x038: 30f71800000000000000 | 	irmovq data,%rdi	
0x042: 30f63000000000000000 | 	irmovq data_end,%rsi
0x04c: 805600000000000000   | 	call bubble_a
0x055: 90                   | 	ret 
                            | 
                            | /* $begin bubble */
                            | # void bubble_a(long *data, long *end) 
0x056:                      | bubble_a:
0x056: 70c100000000000000   | 	jmp	test_1
0x05f:                      | loop_2:
0x05f: 50200800000000000000 | 	mrmovq	8(%rax), %rdx
0x069: 50100000000000000000 | 	mrmovq	(%rax), %rcx
                            |   
0x073: 2028                 |   rrmovq %rdx, %r8
0x075: 2019                 |   rrmovq %rcx, %r9
0x077: 6312                 |   xorq %rcx, %rdx
0x079: 6189                 |   subq %r8, %r9
0x07b: 2281                 |   cmovl %r8, %rcx
0x07d: 6321                 |   xorq %rdx, %rcx
0x07f: 6312                 |   xorq %rcx, %rdx
                            |   
0x081: 40200800000000000000 |   rmmovq %rdx, 8(%rax)
0x08b: 40100000000000000000 |   rmmovq %rcx, (%rax)
                            |   
                            | 
0x095: c0f00800000000000000 | 	iaddq	$8, %rax
0x09f: 70aa00000000000000   | 	jmp	test_2
0x0a8:                      | init_2:
0x0a8: 2070                 | 	rrmovq	%rdi, %rax
0x0aa:                      | test_2:
0x0aa: 2068                 | 	rrmovq %rsi, %r8 #cmpq	%rax, %rsi
0x0ac: 6108                 |   subq %rax, %r8
0x0ae: 765f00000000000000   | 	jg loop_2
0x0b7: c0f6f8ffffffffffffff | 	iaddq	$-8, %rsi   #init_1
0x0c1:                      | test_1:
0x0c1: 2068                 | 	rrmovq %rsi, %r8 #cmpq	%rdi, %rsi
0x0c3: 6178                 |   subq %rdi, %r8
0x0c5: 76a800000000000000   | 	jg init_2
0x0ce: 90                   | 	ret
                            | /* $end bubble*/
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:	 
