                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      | .align 8 	
0x018: 0a00000000000000     | ele1:	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028: b000000000000000     | ele2:	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038: 000c000000000000     | ele3:	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
0x048: 30f71800000000000000 | main:	irmovq ele1,%rdi	
0x052: 805c00000000000000   | 	call sum		# sum(array, 4)
0x05b: 90                   | 	ret 
                            | 
                            | /* $begin sumi-ys */
                            | # long sum(list_ptr ls)
                            | # start in %rdi
0x05c:                      | sum:
0x05c: a0cf                 |   pushq %r12
0x05e: 6277                 | 	andq %rdi,%rdi		# Set condition codes
0x060: 738b00000000000000   |   je end
                            | 
0x069: 50c70000000000000000 | 	mrmovq (%rdi),%r12	# Get *start
0x073: 50770800000000000000 | 	mrmovq 8(%rdi),%rdi
0x07d: 805c00000000000000   |   call sum
0x086: 60c0                 | 	addq %r12,%rax          # Add to sum
0x088: b0cf                 |   popq %r12
0x08a: 90                   |   ret
0x08b:                      | end:
0x08b: 30f00000000000000000 |   irmovq $0, %rax
0x095: b0cf                 |   popq %r12
0x097: 90                   |   ret
                            | /* $end sumi-ys */
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | stack:	 
